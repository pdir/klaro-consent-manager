var {{ myConfigVariableName }} = {
  testing: {{ config.testing }},
  elementID: '{{ config.elementID }}',
  storageMethod: '{{ config.storageMethod }}',
  cookieName: '{{ config.storageName }}',
  htmlTexts: {{ config.htmlTexts }},
  cookieDomain: '{{ config.cookieDomain }}',
  cookieExpiresAfterDays: {{ config.cookieExpiresAfterDays }},
  default: {{ config.default }},
  mustConsent: {{ config.mustConsent }},
  acceptAll: {{ config.acceptAll }},
  hideDeclineAll: {{ config.hideDeclineAll }},
  hideLearnMore: {{ config.hideLearnMore }},

  /*
  You can overwrite existing translations and add translations for your service
  descriptions and purposes. See `src/translations/` for a full list of
  translations that can be overwritten:
  https://github.com/KIProtect/klaro/tree/master/src/translations
  */
  translations: {
    /*
    The `zz` key contains default translations that will be used as fallback values.
    This can e.g. be useful for defining a fallback privacy policy URL.
    */
    zz: {
      privacyPolicyUrl: '/privacy',

    },
    de: {
      /*
      You can specify a language-specific link to your privacy policy here.
      */
      privacyPolicyUrl: '/ohne-klaro.html',
        consentNotice: {
        description: 'Pdir Consent Manager.',
      },
      consentModal: {
        description:
          'Hier können Sie einsehen und anpassen, welche Information wir über Sie ' +
          'sammeln. Einträge die als "Beispiel" gekennzeichnet sind dienen lediglich ' +
          'zu Demonstrationszwecken und werden nicht wirklich verwendet.',
      },
      /*
      You should also define translations for every purpose you define in the
      'services' section. You can define a title and an (optional) description.
      */
      purposes: {
        analytics: {
          title: 'Besucher-Statistiken'
        },
        security: {
          title: 'Sicherheit'
        },
        livechat: {
          title: 'Live Chat'
        },
        advertising: {
          title: 'Anzeigen von Werbung'
        },
        styling: {
          title: 'Styling'
        },
      },
    },
    en: {
      privacyPolicyUrl: '/privacy',
        consentModal: {
        description:
          'Here you can see and customize the information that we collect about you. ' +
          'Entries marked as "Example" are just for demonstration purposes and are not ' +
          'really used on this website.',
      },
      purposes: {
        analytics: {
          title: 'Analytics'
        },
        security: {
          title: 'Security'
        },
        livechat: {
          title: 'Livechat'
        },
        advertising: {
          title: 'Advertising'
        },
        styling: {
          title: 'Styling'
        },
      },
    },
  },

  //  Here you specify the third-party services that Klaro will manage for you.
  services: [
{{ config.services | raw }}
  ],

    /*
    You can define an optional callback function that will be called each time the
    consent state for any given service changes. The consent value will be passed as
    the first parameter to the function (true=consented). The `service` config will
    be passed as the second parameter.
    */
    callback: function (consent, service) {
    console.log(
      'User consent for service ' + service.name + ': consent=' + consent
    );
  },
  poweredBy: 'https://pdir.de/consent/'
};