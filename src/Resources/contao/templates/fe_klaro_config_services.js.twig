{% for service in services %}
{
        name: '{{ service.name|raw }}',
        default: {{ service.default }},

        /*
        Translations belonging to this service go here. The key `zz` contains default
        translations that will be used as a fallback if there are no translations
        defined for a given language.
        */
        translations: {{ service.translations | raw }},
        /*
        The purpose(s) of this service that will be listed on the consent notice. Do not
        forget to add translations for all purposes you list here.
        */
        purposes: [{{ service.purposes | raw }}],

        cookies: [
            /*
            you can either only provide a cookie name or regular expression (regex) or a list
            consisting of a name or regex, a path and a cookie domain. Providing a path and
            domain is necessary if you have services that set cookies for a path that is not
            "/", or a domain that is not the current domain. If you do not set these values
            properly, the cookie can't be deleted by Klaro, as there is no way to access the
            path or domain of a cookie in JS. Notice that it is not possible to delete
            cookies that were set on a third-party domain, or cookies that have the HTTPOnly
            attribute: https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie#new-
            cookie_domain
            */

            /*
            This rule will match cookies that contain the string '_pk_' and that are set on
            the path '/' and the domain 'klaro.kiprotect.com'
            */
            [/^_pk_.*$/, '/', 'klaro.kiprotect.com'],

            /*
            Same as above, only for the 'localhost' domain
            */
            [/^_pk_.*$/, '/', 'localhost'],

            /*
            This rule will match all cookies named 'piwik_ignore' that are set on the path
            '/' on the current domain
            */
            'piwik_ignore',
        ],

        /*
        You can define an optional callback function that will be called each time the
        consent state for the given service changes. The consent value will be passed as
        the first parameter to the function (true=consented). The `service` config will
        be passed as the second parameter.
        */
        callback: function (consent, service) {
            console.log(
                'User consent for service ' + service.name + ': consent=' + consent
            );
        },

        /*
        If 'required' is set to 'true', Klaro will not allow this service to be disabled
        by the user. Use this for services that are always required for your website to
        function (e.g. shopping cart cookies).
        */
        required: {{ service.required }},

        /*
        If 'optOut' is set to 'true', Klaro will load this service even before the user
        has given explicit consent. We strongly advise against this.
        */
        optOut: {{ service.optOut }},

        /*
        If 'onlyOnce' is set to 'true', the service will only be executed once
        regardless how often the user toggles it on and off. This is relevant e.g. for
        tracking scripts that would generate new page view events every time Klaro
        disables and re-enables them due to a consent change by the user.
        */
        onlyOnce: {{ service.onlyOnce }},

        /*

         */
        contextualConsentOnly: {{ service.contextualConsentOnly }},
    },
{% endfor %}
